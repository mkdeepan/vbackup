<?php
require 'Slim/Slim.php';
require 'db.php';

\Slim\Slim::registerAutoloader();

$app = new \Slim\Slim();
$app->get('/hello/:name', function ($name) {
    echo "Hello, $name";
});

$app->get('/users/:id',function($id) {
    $sql = "SELECT * FROM Account";
    try {
        $dbCon = getConnection();
        $stmt = $dbCon->prepare($sql);
        $stmt->bindParam("id", $id);
        $stmt->execute();
        $user = $stmt->fetchObject(); 
        $dbCon = null;
       
        echo '{"user": ' . json_encode($user) . '}';
    } catch(PDOException $e) {
        echo '{"error":{"text":'. $e->getMessage() .'}}';
    }
});

//tips
$app->get('/tips', function () {
    $sql = "SELECT * FROM Tips";
    try {
        $dbCon = getConnection();
        $stmt = $dbCon->prepare($sql);
        $stmt->execute();
        $tips = $stmt -> fetchAll(PDO::FETCH_OBJ);
        $dbCon = null;
        echo '{"Tips": ' . json_encode($tips) . '}';
    } catch(PDOException $e) {
        echo '{"error":{"text":'. $e->getMessage() .'}}';
    }
});

//tags
$app->post('/getTags',function() {
    global $app;
        $request = $app->request();
        $body = $request->getBody();
        $input = json_decode($body); 
	$tagsInformation = array();
	     $acc_id = $input->id; 
	        //for profiles
	        $sql_p = "select profileId, profileFirstName, profileLastName from Profile 
	                  join Account on Account.accountId=Profile.accountId where Account.accountId = '".$acc_id."'";
	            	

        try {
        $dbCon = getConnection();
        $profile = $dbCon->prepare($sql_p);
        $profile->execute();
        $profiles = $profile -> fetchAll(PDO::FETCH_OBJ);
        foreach($profiles as $pro)
        {
                //for allergies
        	$sql_a = "select distinct AN.allergyNameId, AN.allergyNameDescription
        	         from ProfileTagMapping PTM 
        	         join Allergy A on A.profileId = PTM.profileId
        	         join AllergyName AN on AN.allergyNameId = A.allergyNameId
			 where PTM.profileId = '".$pro->profileId."'";	
	        
	$allergy = $dbCon->prepare($sql_a);
        $allergy->execute();
        $allergies = $allergy -> fetchAll(PDO::FETCH_OBJ);
                //for tags
	        $sql_t = "select TI.tagId, TL.tagName, sum(TI.tagCount) as tagCounts from TagInfo TI 
	                  join TagList TL on TL.tagListId=TI.tagId 
	                  where profileId = '".$pro->profileId."' group by TI.tagId ";
	                  
        $tag = $dbCon->prepare($sql_t);
        $tag->execute();
        $tags = $tag -> fetchAll(PDO::FETCH_OBJ);
        
        $tagsInformation[] = array(
                'profileId'=>$pro->profileId,
                'profileFirstName'=>$pro->profileFirstName,
                'profileLastName'=>$pro->profileLastName,
                'allergy'=>$allergies,
                'tags'=>$tags
                );
         }
         $dbCon = null;
        //$tagsInformation = array_merge((array)$profiles,(array)$tags_aller);
        echo '{"tagInfo": ' . json_encode($tagsInformation) . '}';
    } catch(PDOException $e) {
        echo '{"error":{"text":'. $e->getMessage() .'}}';
    }
});

$app->get('/defaultImage', function () {
    $sql = "SELECT * FROM Image";
    //echo $id.$pwd; exit;
    try {
        $dbCon = getConnection();
        $stmt = $dbCon->prepare($sql);
        $stmt->execute();
        $img = $stmt -> fetchAll(PDO::FETCH_OBJ);
        $dbCon = null;
        echo '{"image": ' . json_encode($img) . '}';
    } catch(PDOException $e) {
        echo '{"error":{"text":'. $e->getMessage() .'}}';
    }
});

$app->post('/validateUser',function() {

    global $app;
	
	 $request = $app->request();
    $body = $request->getBody();
    $input = json_decode($body); 
	 //var_dump($input);
	 $id = $input->id; 
	 $pwd = $input->password; 
    $base_url = 'http://myvalert.com/';
    $sql = "SELECT * FROM Account where accountEmail=:id and loginPassword=:password";
    //echo $id.$pwd; exit;
    try {
        $dbCon = getConnection();
        $stmt = $dbCon->prepare($sql);
        $stmt->bindParam("id", $id);
        $stmt->bindParam("password", base64_encode($pwd));
        $res = $stmt->execute();
        $user = $stmt->rowCount(); 
        $dbCon = null;
        if($user){
        $vals = $stmt->fetchAll(PDO::FETCH_OBJ);
        //var_dump($vals); exit;
        $user = array(
                   'status'=>'true',
                   'accountId'=>$vals[0]->accountId,
                   'accountPicture'=> $base_url.'uploads/accountImages/'.$vals[0]->accountPicture,
                );
        echo '{"user": ' . json_encode($user) . '}';
        }else{
        echo '{"user": ' . json_encode('false') . '}';
        }
    } catch(PDOException $e) {
        echo '{"error":{"text":'. $e->getMessage() .'}}';
    }
});

$app->post('/accountInformation',function() {

    global $app;
	
	$request = $app->request();
        $body = $request->getBody();
        $input = json_decode($body); 
	
	$id = $input->id; 
	$pwd = base64_encode($input->password); 
//echo $id; echo $pwd; exit;
   $base_url = 'http://myvalert.com/';
    $account = "SELECT accountId, accountFirstName, accountMiddleName, accountLastName,accountEmail,loginPassword, accountMobilePhone,amn_ex as countryExtn, A.description AS gender, accountPicture, P . *
						FROM Account
						JOIN Gender A ON A.genderId = Account.accountGender
						LEFT JOIN PaymentInformation P ON P.paymentInfoId = Account.accountPaymentId 
					where Account.accountEmail='".$id."' and Account.loginPassword='".$pwd."'";
				
	$email = "SELECT E . * , ET.emailTypeName
					FROM EmailTable E
					JOIN Account A ON A.accountId = E.accountId
					JOIN EmailType ET ON E.emailTypeId = ET.id 
	          where A.accountEmail='".$id."' and A.loginPassword='".$pwd."'";	
	          
	$phone = "SELECT PNT . * , PT.phoneTypeName
					FROM PhoneNumberTable PNT
					JOIN PhoneType PT ON PT.id = PNT.phoneTypeId
					JOIN Account A ON A.accountId = PNT.accountId
				 where A.accountEmail='".$id."' and A.loginPassword='".$pwd."'"; 
						
   $address = "SELECT AT . * , ATY.addressTypeName
						FROM AddressTable AT
						JOIN AddressType ATY ON ATY.id = AT.addressTypeId
						JOIN Account A ON A.accountId = AT.accountId
					where A.accountEmail='".$id."' and A.loginPassword='".$pwd."'"; 
    //echo $id.$pwd; exit;
    try {
        $dbCon = getConnection();
        $acc = $dbCon->prepare($account);
        $acc->execute();
        $account_info = $acc -> fetchAll(PDO::FETCH_OBJ);
        
       if($account_info[0]->accountPicture)
           $account_info[0]->accountPicture = $base_url .'uploads/accountImages/'.$account_info[0]->accountPicture;      
        
        $em = $dbCon->prepare($email);
        $em->execute();
        $email_info = $em->fetchAll(PDO::FETCH_OBJ);
        
        $ph = $dbCon->prepare($phone);
        $ph->execute();
        $phone_info = $ph->fetchAll(PDO::FETCH_OBJ);
        
        $addr = $dbCon->prepare($address);
        $addr->execute();
        $address_info = $addr->fetchAll(PDO::FETCH_OBJ);
        
        $array = array('emails'=>$email_info,'phones'=>$phone_info,'addresses'=>$address_info);
        $merged[] = array_merge((array)$account_info,(array)$array);
        
        $dbCon = null;
       
        echo '{"AccountInformation": ' . json_encode($merged) . '}';
       
    } catch(PDOException $e) {
        echo '{"error":{"text":'. $e->getMessage() .'}}';
    }
});

$app->post('/accountInformationById',function() {

    global $app;
	
	$request = $app->request();
        $body = $request->getBody();
        $input = json_decode($body); 
	
	$id = $input->id; 
	$base_url = 'http://myvalert.com/';
	//$pwd = base64_encode($input->password); 
//echo $id; echo $pwd; exit;
    $account = "SELECT accountId, accountFirstName, accountMiddleName, accountLastName, A.description AS gender, accountPicture, P . *
						FROM Account
						JOIN Gender A ON A.genderId = Account.accountGender
						LEFT JOIN PaymentInformation P ON P.paymentInfoId = Account.accountPaymentId 
					where Account.accountId='".$id."' ";
				
	$email = "SELECT E . * , ET.emailTypeName
					FROM EmailTable E
					JOIN Account A ON A.accountId = E.accountId
					JOIN EmailType ET ON E.emailTypeId = ET.id 
	          where A.accountId='".$id."' ";	
	          
	$phone = "SELECT PNT . * , PT.phoneTypeName
					FROM PhoneNumberTable PNT
					JOIN PhoneType PT ON PT.id = PNT.phoneTypeId
					JOIN Account A ON A.accountId = PNT.accountId
				 where A.accountId='".$id."'"; 
						
   $address = "SELECT AT . * , ATY.addressTypeName
						FROM AddressTable AT
						JOIN AddressType ATY ON ATY.id = AT.addressTypeId
						JOIN Account A ON A.accountId = AT.accountId
					where A.accountId='".$id."' "; 
    //echo $id.$pwd; exit;
    try {
        $dbCon = getConnection();
        $acc = $dbCon->prepare($account);
        $acc->execute();
        $account_info = $acc -> fetchAll(PDO::FETCH_OBJ);
        
        if($account_info[0]->accountPicture)
          $account_info[0]->accountPicture = $base_url .'uploads/accountImages/'.$account_info[0]->accountPicture;
                
        $em = $dbCon->prepare($email);
        $em->execute();
        $email_info = $em->fetchAll(PDO::FETCH_OBJ);
        
        $ph = $dbCon->prepare($phone);
        $ph->execute();
        $phone_info = $ph->fetchAll(PDO::FETCH_OBJ);
        
        $addr = $dbCon->prepare($account);
        $addr->execute();
        $address_info = $addr->fetchAll(PDO::FETCH_OBJ);
        
        $array = array('emails'=>$email_info,'phones'=>$phone_info,'addresses'=>$address_info);
        $merged[] = array_merge((array)$account_info,(array)$array);
        
        $dbCon = null;
       
        echo '{"AccountInformation": ' . json_encode($merged) . '}';
       
    } catch(PDOException $e) {
        echo '{"error":{"text":'. $e->getMessage() .'}}';
    }
});

$app->post('/getProfiles',function() {
    global $app;
        $request = $app->request();
        $body = $request->getBody();
        $input = json_decode($body); 
	
	$users = $input->ids; 
   $base_url = 'http://myvalert.com/';
        if(!empty($users)){
           $sql = "SELECT P.profileId as profileid,CONCAT('SJ',LPAD(P.profileId,3,'0')) as profileIds, P.*,G.description as gender,PT.*,S.stateName,C.countryName,D.*,E.*,I.* FROM Profile P 
                  left join DoctorDetails D on D.doctorDetailsId = P.profileDoctorDetailsId 
						left join EmergencyContacts E on E.emergencyContactId = P.profileEmergencyContactId 
						left join Insurance I on I.insuranceId = P.profileInsuranceId 
						left join ProfileTagMapping PT on PT.profileId = P.profileId 
						left join Gender G on G.genderId = P.profileGenderId		
                                                left join State S on S.stateId = P.profileAddressStateId
                                                left join Country C on C.countryId = P.profileAddressCountryId
						WHERE PT.tagId IN ('".implode("','",$users)."')";
        }else{
           $sql = "SELECT P.profileId as profileid, CONCAT('SJ',LPAD(P.profileId,3,'0')) as profileIds, P.*,G.description as gender,PT.*,S.stateName,C.countryName,D.*,E.*,I.* FROM Profile P 
                  left join DoctorDetails D on D.doctorDetailsId = P.profileDoctorDetailsId 
						left join EmergencyContacts E on E.emergencyContactId = P.profileEmergencyContactId 
						left join Insurance I on I.insuranceId = P.profileInsuranceId 
						left join ProfileTagMapping PT on PT.profileId = P.profileId
						left join Gender G on G.genderId = P.profileGenderId
						left join State S on S.stateId = P.profileAddressStateId
                                                left join Country C on C.countryId = P.profileAddressCountryId";   
        }

    try {
        $dbCon = getConnection();
        $stmt = $dbCon->prepare($sql);
        $stmt->execute();
        $user  = $stmt->fetchAll(PDO::FETCH_OBJ);
        foreach($user as $usr){
        	$aller_arr = array();
        	$usr_id = $usr->profileid;
        	if($usr->profilePicture)
        	  $usr->profilePicture = $base_url.'uploads/profileImages/'.$usr->profilePicture;
        	if($usr->profileSchoolLogo)
        	  $usr->profileSchoolLogo = $base_url.'uploads/school/'.$usr->profileSchoolLogo;
        	if($usr->scanCopyFront)
        	  $usr->scanCopyFront = $base_url.'uploads/insurance/front/'.$usr->scanCopyFront;
         if($usr->scanCopyBack)
        	  $usr->scanCopyBack = $base_url.'uploads/insurance/back/'.$usr->scanCopyBack;
        	  
        	//for allergies
	      $sql_a = "select A.allergyId, AN.allergyNameDescription, AT.allergyTypeDescription
        	         from Allergy A 
        	         left join AllergyName AN on AN.allergyNameId = A.allergyNameId
        	         left join AllergyType AT on AT.allergyTypeId = A.allergyTypeId
						where A.profileId = '".$usr_id."'";
						

         $aller = $dbCon->prepare($sql_a);
         $aller->execute();
         $allergies = $aller -> fetchAll(PDO::FETCH_OBJ);
         foreach($allergies as $key => $algy) {
         	
	        	$sql_b = "select A.allergyId, AN.allergyNameDescription, AT.allergyTypeDescription
        	         from Allergy A 
        	         join AllergyName AN on AN.allergyNameId = A.allergyNameId
        	         join AllergyType AT on AT.allergyTypeId = A.allergyTypeId
						where A.allergyId = '".$algy->allergyId."'";
			   $allergy_array = $dbCon->prepare($sql_b);
	        	$allergy_array->execute();
	        	
	        	$allers = $allergy_array->fetchAll(PDO::FETCH_ASSOC);
	        	$temp_array = array();
	        	if(!empty($allers)){
	        	   $temp_array = array(
	        	                'allergyId' => $allers[0]['allergyId'],
	        	                'allergyNameDescription' => $allers[0]['allergyNameDescription'],
	        	                'allergyTypeDescription' => $allers[0]['allergyTypeDescription']
	        	                );
	        	}
	        	
	        	$aller_arr[] = $temp_array;
				
	        	$sql_sym_mild = "select PSM.ProfileSymtomMildId, SM.symtomMildId, SM.symtomMildDescription from SymtomsMild SM join ProfileSymtomsMild PSM on 
	        	                 PSM.symtomMildId = SM.symtomMildId where PSM.allergyId = '".$algy->allergyId."'";
	        	                 //echo $sql_sym_mild; exit;
	        	$pro_mild = $dbCon->prepare($sql_sym_mild);
	        	$pro_mild->execute();
	        	$mild = $pro_mild->fetchAll(PDO::FETCH_ASSOC);
	        	
	        	$aller_arr[$key]["mild"] = $mild;
	        	
	        
	         $sql_sym_sev = "select PSS.profileSymtomSevereId, SS.symtomSevereId, SS.symtomSevereDescription from SymtomsSevere SS join ProfileSymtomsSevere PSS on 
	        	                 PSS.symtomSevereId = SS.symtomSevereId where PSS.allergyId = '".$algy->allergyId."'";
	        	$pro_sev = $dbCon->prepare($sql_sym_sev);
	        	$pro_sev->execute();
	        	$severe = $pro_sev->fetchAll(PDO::FETCH_ASSOC);
	        	 		
	        	$aller_arr[$key]["severe"] = $severe;
	        	
	      
        
         }
         
         //for incident
         $sql_i = "select AT.allergyTypeDescription, AIS.allergyIncidentDesc, AIS.allergyIncidentDate
        	         from ProfileTagMapping PTM 
        	         join AllergyIncidentSymptoms AIS on AIS.profileId = PTM.profileId
        	         join AllergyType AT on AT.allergyTypeId = AIS.allergyTypeId
						where PTM.profileId = '".$usr_id."'";


         $incident = $dbCon->prepare($sql_i);
         $incident->execute();
         $incidents = $incident -> fetchAll(PDO::FETCH_OBJ);
         
         //for emergency contacts
         $sql_con = "select E.*,P.phoneTypeName from EmergencyContacts E join PhoneType P on P.id = E.emergencyPhoneType
                     where E.profileId = '".$usr_id."'";


         $emergency = $dbCon->prepare($sql_con);
         $emergency->execute();
         $contacts = $emergency -> fetchAll(PDO::FETCH_OBJ);     
         
         //for doctor info
         $sql_doc = "select D.*,P.phoneTypeName,A.addressTypeName,S.stateName,C.countryName from DoctorDetails D 
                     join PhoneType P on P.id = D.doctorPhoneType
                     join AddressType A on A.id = D.doctorAddressType
                     join State S on S.stateId = D.doctorState
                     join Country C on C.countryId = D.doctorCountry
                     where D.profileId = '".$usr_id."'";


         $doctor = $dbCon->prepare($sql_doc);
         $doctor->execute();
         $doc_info = $doctor -> fetchAll(PDO::FETCH_OBJ);       
         
         //for insurance
         $sql_ins = "select * from Insurance
                     where profileId = '".$usr_id."'";


         $insure = $dbCon->prepare($sql_ins);
         $insure->execute();
         $insurance = $insure -> fetchAll(PDO::FETCH_OBJ);  
         
         $total_arr = array(
                            'allergies'=>$aller_arr,
                            'incidents'=>$incidents,
                            'emergency' => $contacts,
                            'doctor'=>$doc_info,
                            'insurance' => $insurance
                            );
         $merged[] = array_merge((array)$usr,(array)$total_arr);
        
        }
       
        $dbCon = null;
       
        echo '{"profiles": ' . json_encode($merged) . '}';
    } catch(PDOException $e) {
        echo '{"error":{"text":'. $e->getMessage() .'}}';
    }
});

$app->post('/getProfileDetails',function() {
   
   global $app;
   $request = $app->request();
   $body = $request->getBody();
   $input = json_decode($body);

   $tagid = $input->id; 
	$sql = "SELECT P.profileId as profileid, CONCAT('SJ',LPAD(P.profileId,3,'0')) as profileIds, P.*,PT.*,D.*,E.*,I.* FROM Profile P left join DoctorDetails D on D.doctorDetailsId = P.profileDoctorDetailsId 
						left join EmergencyContacts E on E.emergencyContactId = P.profileEmergencyContactId 
						left join Insurance I on I.insuranceId = P.profileInsuranceId 
						left join ProfileTagMapping PT on PT.profileId = P.profileId 
						where PT.tagId = :tagid";
					//	echo $sql; exit;
						
    try {
	        $dbCon = getConnection();
	        $stmt = $dbCon->prepare($sql);
	        $stmt->bindParam("tagid", $tagid);
	        $stmt->execute();
	        $user = $stmt->fetchAll(PDO::FETCH_OBJ);    
	        $user_id = $user[0]->profileid; 
	        $base_url = 'http://localhost/';
	      if($user[0]->profilePicture)
        	  $user[0]->profilePicture = $base_url.'uploads/profileImages/'.$user[0]->profilePicture;
        	if($user[0]->profileSchoolLogo)
        	  $user[0]->profileSchoolLogo = $base_url.'uploads/school/'.$user[0]->profileSchoolLogo;
        	if($user[0]->scanCopyFront)
        	  $user[0]->scanCopyFront = $base_url.'uploads/insurance/front/'.$user[0]->scanCopyFront;
         if($user[0]->scanCopyBack)
        	  $user[0]->scanCopyBack = $base_url.'uploads/insurance/back/'.$user[0]->scanCopyBack;
	     
	      //for allergies
	      $sql_a = "select A.allergyId, AN.allergyNameDescription, AT.allergyTypeDescription
        	         from ProfileTagMapping PTM 
        	         join Allergy A on A.profileId = PTM.profileId
        	         join AllergyName AN on AN.allergyNameId = A.allergyNameId
        	         join AllergyType AT on AT.allergyTypeId = A.allergyTypeId
						where PTM.profileId = '".$user_id."'";
						

         $aller = $dbCon->prepare($sql_a);
         $aller->execute();
         $allergies = $aller -> fetchAll(PDO::FETCH_OBJ);
         $mild = array();
         $severe = array();
         foreach($allergies as $key => $algy) {
         	
	        	$sql_b = "select A.allergyId, AN.allergyNameDescription, AT.allergyTypeDescription
        	         from ProfileTagMapping PTM 
        	         join Allergy A on A.profileId = PTM.profileId
        	         join AllergyName AN on AN.allergyNameId = A.allergyNameId
        	         join AllergyType AT on AT.allergyTypeId = A.allergyTypeId
						where A.allergyId = '".$algy->allergyId."'";
			   $allergy_array = $dbCon->prepare($sql_b);
	        	$allergy_array->execute();
	        $allers = $allergy_array->fetchAll(PDO::FETCH_ASSOC);
	        	$temp_array = array(
	        	                'allergyId' => $allers[0]['allergyId'],
	        	                'allergyNameDescription' => $allers[0]['allergyNameDescription'],
	        	                'allergyTypeDescription' => $allers[0]['allergyTypeDescription']
	        	                );
	        	
	        	$aller_arr[] = $temp_array;
				
	        	$sql_sym_mild = "select PSM.ProfileSymtomMildId, SM.symtomMildId, SM.symtomMildDescription from SymtomsMild SM join ProfileSymtomsMild PSM on 
	        	                 PSM.symtomMildId = SM.symtomMildId where PSM.allergyId = '".$algy->allergyId."'";
	        	                 //echo $sql_sym_mild; exit;
	        	$pro_mild = $dbCon->prepare($sql_sym_mild);
	        	$pro_mild->execute();
	        	$mild = $pro_mild->fetchAll(PDO::FETCH_ASSOC);
	        	/*if(!empty($mild))
	        	{	 */       	
	        	  //array_push($aller_arr,$mild);
	        	  $aller_arr[$key]["mild"] = $mild;
	        	//}
	        
	         $sql_sym_sev = "select PSS.profileSymtomSevereId, SS.symtomSevereId, SS.symtomSevereDescription from SymtomsSevere SS join ProfileSymtomsSevere PSS on 
	        	                 PSS.symtomSevereId = SS.symtomSevereId where PSS.allergyId = '".$algy->allergyId."'";
	        	$pro_sev = $dbCon->prepare($sql_sym_sev);
	        	$pro_sev->execute();
	        	$severe = $pro_sev->fetchAll(PDO::FETCH_ASSOC);
	        	/*if(!empty($severe))
	        	{	 */   
	        	   //array_push($aller_arr,$severe);    		
	        	   $aller_arr[$key]["severe"] = $severe;
	        	//}
	      
        
         }
        
         //for incident
         $sql_i = "select AT.allergyTypeDescription, AIS.allergyIncidentDesc, AIS.allergyIncidentDate
        	         from ProfileTagMapping PTM 
        	         join AllergyIncidentSymptoms AIS on AIS.profileId = PTM.profileId
        	         join AllergyType AT on AT.allergyTypeId = AIS.allergyTypeId
						where PTM.profileId = '".$user_id."'";


         $incident = $dbCon->prepare($sql_i);
         $incident->execute();
         $incidents = $incident -> fetchAll(PDO::FETCH_OBJ);
         $total_arr = array('allergies'=>$aller_arr,'incidents'=>$incidents);
         $merged[] = array_merge((array)$user,(array)$total_arr);
         
         $dbCon = null;
	      echo '{"profiledetail": ' . json_encode($merged) .'}';
	    } catch(PDOException $e) {
	      echo '{"error":{"text":'. $e->getMessage() .'}}';
	    }
	});


$app->get('/allergyCounts',function() {
     $pro_sql = "select count(distinct profileId) as profilecount from Profile";
     $aller_sql = "select count(distinct profileId) as allergycount from Allergy";
           // echo $sql; exit;
    try {
        $dbCon = getConnection();
        $aller = $dbCon->prepare($aller_sql);
        $pro = $dbCon->prepare($pro_sql);
        $aller->execute();
        $pro->execute();
        $profile = $pro -> fetchAll(PDO::FETCH_OBJ);
        $allergy = $aller -> fetchAll(PDO::FETCH_OBJ);
        $dbCon = null;
        
        $counts[] = array(
                    'profileCount' =>  $profile[0]->profilecount,
                    'allergyCount' =>  $allergy[0]->allergycount
                  );
       
        echo '{"allergy": ' . json_encode($counts) . '}';
    } catch(PDOException $e) {
        echo '{"error":{"text":'. $e->getMessage() .'}}';
    }
});


$app->get('/allergies',function() {
     $sql = "select i.allergyTypeId, AT.allergyTypeDescription, count(*) as count from 
			     (select profileId,allergyTypeId from Allergy group by profileId, allergyTypeId) as i 
			     join AllergyType AT on AT.allergyTypeId = i.allergyTypeId 
			     group by allergyTypeId";
			     
    try {
        $dbCon = getConnection();
        $items = $dbCon->prepare($sql);
        $items->execute();
        $handicap = $items -> fetchAll(PDO::FETCH_OBJ);
        $dbCon = null;
       
        echo '{"allergies": ' . json_encode($handicap) . '}';
    } catch(PDOException $e) {
        echo '{"error":{"text":'. $e->getMessage() .'}}';
    }
});

$app->post('/getProfileHistory',function() {
    
    global $app;
    $request = $app->request();
    $body = $request->getBody();
    $input = json_decode($body);

    $id = $input->id; 
    //echo $id; exit;
    $base_url = 'http://myvalert.com/';
    $sql1 = "select P.*,M.*,CONCAT('SJ',LPAD(P.profileId,3,'0')) as profileIds from Profile P 
                  join ProfileTagMapping M on P.profileId = M.profileId where M.tagId = :id";
    $sql2 = "select AT.allergyTypeDescription, AIS.allergyIncidentDesc, AIS.allergyIncidentDate
        	         from ProfileTagMapping PTM 
        	         join AllergyIncidentSymptoms AIS on AIS.profileId = PTM.profileId
        	         join AllergyType AT on AT.allergyTypeId = AIS.allergyTypeId
						where PTM.tagId = :id order by AIS.allergyIncidentDate desc";
						
    $sql3 = "select A.allergyId, AN.allergyNameDescription, AT.allergyTypeDescription
        	         from ProfileTagMapping PTM 
        	         join Allergy A on A.profileId = PTM.profileId
        	         join AllergyName AN on AN.allergyNameId = A.allergyNameId
        	         join AllergyType AT on AT.allergyTypeId = A.allergyTypeId
						where PTM.tagId = :id";


    try {
        $dbCon = getConnection();
        $prof = $dbCon->prepare($sql1);
        $prof->bindParam("id", $id);
        $prof->execute();
        $profile = $prof -> fetchObject();
        
         if($profile->profilePicture)
        	  $profile->profilePicture = $base_url.'uploads/profileImages/'.$profile->profilePicture;
       	if($profile->profileSchoolLogo)
        	  $profile->profileSchoolLogo = $base_url.'uploads/school/'.$profile->profileSchoolLogo;
        	if($profile->scanCopyFront)
        	  $profile->scanCopyFront = $base_url.'uploads/insurance/front/'.$profile->scanCopyFront;
         if($profile->scanCopyBack)
        	  $profile->scanCopyBack = $base_url.'uploads/insurance/back/'.$profile->scanCopyBack;
        	  
        $his = $dbCon->prepare($sql2);
        $his->bindParam("id", $id);
        $his->execute();
        $history = $his -> fetchAll(PDO::FETCH_OBJ);
        
        $dis = $dbCon->prepare($sql3);
        $dis->bindParam("id", $id);
        $dis->execute();
        $allergies = $dis -> fetchAll(PDO::FETCH_OBJ);
        foreach($allergies as $key => $algy) {
         	
	        	$sql_b = "select A.allergyId, AN.allergyNameDescription, AT.allergyTypeDescription
        	         from ProfileTagMapping PTM 
        	         join Allergy A on A.profileId = PTM.profileId
        	         join AllergyName AN on AN.allergyNameId = A.allergyNameId
        	         join AllergyType AT on AT.allergyTypeId = A.allergyTypeId
						where A.allergyId = '".$algy->allergyId."'";
			   $allergy_array = $dbCon->prepare($sql_b);
	        	$allergy_array->execute();
	        	$allers = $allergy_array->fetchAll(PDO::FETCH_ASSOC);
	        	$temp_array = array(
	        	                'allergyId' => $allers[0]['allergyId'],
	        	                'allergyNameDescription' => $allers[0]['allergyNameDescription'],
	        	                'allergyTypeDescription' => $allers[0]['allergyTypeDescription']
	        	                );
	        	
	        	$aller_arr[] = $temp_array;
				
	        	$sql_sym_mild = "select PSM.ProfileSymtomMildId, SM.symtomMildId, SM.symtomMildDescription from SymtomsMild SM join ProfileSymtomsMild PSM on 
	        	                 PSM.symtomMildId = SM.symtomMildId where PSM.allergyId = '".$algy->allergyId."'";
	        	                 //echo $sql_sym_mild; exit;
	        	$pro_mild = $dbCon->prepare($sql_sym_mild);
	        	$pro_mild->execute();
	        	$mild = $pro_mild->fetchAll(PDO::FETCH_ASSOC);
	        	/*if(!empty($mild))
	        	{	 */       	
	        	  //array_push($aller_arr,$mild);
	        	  $aller_arr[$key]["mild"] = $mild;
	        	//}
	        
	         $sql_sym_sev = "select PSS.profileSymtomSevereId, SS.symtomSevereId, SS.symtomSevereDescription from SymtomsSevere SS join ProfileSymtomsSevere PSS on 
	        	                 PSS.symtomSevereId = SS.symtomSevereId where PSS.allergyId = '".$algy->allergyId."'";
	        	$pro_sev = $dbCon->prepare($sql_sym_sev);
	        	$pro_sev->execute();
	        	$severe = $pro_sev->fetchAll(PDO::FETCH_ASSOC);
	        	/*if(!empty($severe))
	        	{	 */   
	        	   //array_push($aller_arr,$severe);    		
	        	   $aller_arr[$key]["severe"] = $severe;
	        	//}
	      
        
         }
        $dbCon = null;
     
        echo '{"profile": ' . json_encode($profile) . ',"history": ' . json_encode($history) . ',"allergies": ' . json_encode($aller_arr) . '}'; 
    } catch(PDOException $e) {
        echo '{"error":{"text":'. $e->getMessage() .'}}';
    }
});

$app->post('/getInformationSharing',function() {
   
   global $app;
   $request = $app->request();
   $body = $request->getBody();
   $input = json_decode($body);

   $tagid = $input->id; 

	$sql = "select S.*,U.* from InformationSharing S join UserType U on U.userTypeId = S.userTypeId
						join ProfileTagMapping PT on PT.profileId = S.profileId 
						where PT.tagId = :tagid";
    try {
	         $dbCon = getConnection();
	         $stmt = $dbCon->prepare($sql);
	         $stmt->bindParam("tagid", $tagid);
	         $stmt->execute();
	         //$info = $stmt->fetchObject(); 
	         $info = $stmt -> fetchAll(PDO::FETCH_OBJ);	  
	         $dbCon = null;
		      echo '{"informationsharing": ' . json_encode($info) .'}';
		    } catch(PDOException $e) {
		      echo '{"error":{"text":'. $e->getMessage() .'}}';
		    }
	});

$app->get('/defaultInputs',function() {
	 $header = array('country','states','addresstype','emailtype','phonetype','gender','allergyname','allergytype','symptomsmild','symptomssevere');
    $input[0] = "select countryId, countryName from Country";
    $input[1] = "select stateId, stateName, countryId from State";
    $input[2] = "select id as addressTypeId, addressTypeName from AddressType";
    $input[3] = "select id as emailTypeId, emailTypeName from EmailType";
    $input[4] = "select id as phoneTypeId, phoneTypeName from PhoneType";
    $input[5] = "select * from Gender";
    $input[6] = "select * from AllergyName";
    $input[7] = "select * from AllergyType";  
    $input[8] = "select * from SymtomsMild";
    $input[9] = "select * from SymtomsSevere";
    
    $rs = '';
    try {
        $dbCon = getConnection();
        for($i=0;$i < 10;$i++)
        {
        	  $prepare[$i] = $dbCon->prepare($input[$i]);
        	  $prepare[$i]->execute();
        	  $result[$i] = array($header[$i] => $prepare[$i] -> fetchAll(PDO::FETCH_OBJ));        	  
        }
     
        $dbCon = null;
        echo json_encode($result);	    
    } catch(PDOException $e) {
        echo '{"error":{"text":'. $e->getMessage() .'}}';
    }
});

//---------------------------------------------Code for edit purpose-------------------------//
$app->post('/editPersonal',function() {
	
    global $app;
        $request = $app->request();
        $body = $request->getBody();
        $input = json_decode($body);
        $dbCon = getConnection();
        $phones = array(); 
        $emails = array(); 
        $address = array(); 
        
        $account_id = $input->accountId;
        $exist_check = "select * from Account where accountId='".$account_id."'";
        $acc_chk = $dbCon->prepare($exist_check);
        $acc_chk->execute();
        $count = $acc_chk->fetchAll();
        if(count($count))
        {
        	  if($input->accountPicture != '')
        	  {
        	  	  $name = '';
        	  	  $data = $input->accountPicture;
        	  	  $data = explode(",",$data);
        	  	  if(!empty($data) && isset($data[1]))
        	  	  {
			        $data = base64_decode($data[1]);
			        $path = '../beta/test/';
			        //$name = uniqid() . date('Y-m-dH:i:s') . '.jpeg';
			        $name = "profile".$account_id.'.jpeg';
			        $file = $path . $name;
			        $success = file_put_contents($file, $data);
		        }
		        
        	  }
	        $account = array(
	                      'accountFirstName' => $input->accountFirstName,
	                      'accountMiddleName' => $input->accountMiddleName,
	                      'accountLastName' => $input->accountLastName,
	                      'accountGender' => $input->gender,
	                      'accountPicture' => $name,
	                   );
	        $update_acc = "update Account set accountFirstName='".$account['accountFirstName']."', accountMiddleName='".$account['accountMiddleName']."',
	                       accountLastName='".$account['accountLastName']."', accountGender='".$account['accountGender']."', accountPicture='".$account['accountPicture']."'
	                       where accountId = '$account_id'";
	                       
	        //echo $update_acc; //exit;
	        foreach($input->phones as $phn)
	        {
	        	 $phones[] = "('$account_id','$phn->phoneTypeId','$phn->phoneNumber','$phn->phoneNumberEx')";
	        }   
	        
	        foreach($input->emails as $email)
	        {
	        	 $emails[] = "('$account_id','$email->emailTypeId','$email->emailAddress')";
	        }
	        
	        foreach($input->addresses as $addr)
	        {
	        	 $address[] = "('$account_id','$addr->addressTypeId','$addr->addressFirst','$addr->addressSecond','$addr->city','$addr->state','$addr->zip','$addr->country')";
	        }
	        $phone_arr = implode(",",$phones);    
	        $email_arr = implode(",",$emails);  
	        $addr_arr = implode(",",$address);   
	        $phone_del = "delete from PhoneNumberTable where accountId='$account_id'";
	        $email_del = "delete from EmailTable where accountId='$account_id'";
	        $addr_del = "delete from AddressTable where accountId='$account_id'";
	        $insert_phone = "insert into PhoneNumberTable (accountId,phoneTypeId,phoneNumber,phoneNumberEx) values ".$phone_arr."";
	        $insert_email = "insert into EmailTable (accountId,emailTypeId,emailAddress) values ".$email_arr."";
	        $insert_address = "insert into AddressTable (accountId,addressTypeId,addressFirst,addressSecond,city,state,zip,country) values ".$addr_arr."";
	        /*echo $insert_phone;
	        echo $insert_email;
	        echo $insert_address; exit;*/
	        try {
             
              $acc1 = $dbCon->prepare($update_acc);
	           $acc1->execute();
	           $del1 = $dbCon->prepare($phone_del);
	           $del1->execute();
	           $del2 = $dbCon->prepare($email_del);
	           $del2->execute();
	           $del3 = $dbCon->prepare($addr_del);
	           $del3->execute();
	           $insert1 = $dbCon->prepare($insert_phone);
	           $insert1->execute();
	           $insert2 = $dbCon->prepare($insert_email);
	           $insert2->execute();
	           $insert3 = $dbCon->prepare($insert_address);
	           $insert3->execute();
	           
	           echo json_encode(array(
	            "status" => 'true',
	            "message" => "Personal info updated successfully"
	            ));
           }catch(PDOException $e) {
           	  echo json_encode(array(
		            "status" => false,
		            "message" => $e->getMessage()
	           ));              
           }
        }
      else
        {
        	  echo json_encode(array(
	            "status" => false,
	            "message" => "Account Id missing."
	        ));
        }        
});

$app->post('/editSigninfo',function() {
	
    global $app;
        $request = $app->request();
        $body = $request->getBody();
        $input = json_decode($body);
        
        $account_id = $input->accountId;
        $username = $input->userName;
        $pwd = base64_encode($input->password);
        $mobile = $input->accountMobilePhone;
        $mob_extn = $input->mobileExtn;
        
        $sql = "select * from Account where accountEmail = '".$username."' and accountId <> '".$account_id."'";
        try{
        	  $dbCon = getConnection();
        	  $count = $dbCon->prepare($sql);
        	  $count->execute();
        	  $rows = $count->fetchAll();
        	  if(count($rows) == 0)
        	  {
        	  	  $update = "update Account set accountEmail='".$username."', loginPassword='".$pwd."', accountMobilePhone='".$mobile."',
        	  	             amn_ex='".$mob_extn."' where accountId = '".$account_id."'";
        	  	  $acc_upd = $dbCon->prepare($update);
        	     $res = $acc_upd->execute();
        	     if($res){
        	     	 echo json_encode(array(
		            "status" => 'true',
		            "message" => "Signing info updated successfully"
	            ));
        	     }else {
        	     	 echo json_encode(array(
		            "status" => 'false',
		            "message" => "Signing info updation failed"
	            ));
        	     }
        	  	
        	  }
           else
           {
           	 echo json_encode(array(
		            "status" => false,
		            "message" => 'Username / Email already exist'
	           )); 
           }
        }catch(PDOException $e){
        	  echo json_encode(array(
		            "status" => false,
		            "message" => $e->getMessage()
	           ));  
        }
        
});

$app->post('/editProfile', function(){
	global $app;
        $request = $app->request();
        $body = $request->getBody();
        $input = json_decode($body);
        $dbCon = getConnection();
        $emergency = array();
        $insurance = array();
        $doctor = array();     
        
        //var_dump($input); exit;
        $account_id = $input->accountId;
        $profile_id = $input->profileId;
        if($account_id !='')
        {
        	
        	 if($input->profilePicture != '')
        	  {
        	  	  $profilename = '';
        	  	  $data = $input->profilePicture;
        	  	  $data = explode(",",$data);
        	  	  if(!empty($data) && isset($data[1]))
        	  	  {
        	  	  	  if(!$profile_id){
        	  	  	  	$profile_id = date('Y-m-d_H:i:s');
        	  	  	  }
			        $data = base64_decode($data[1]);
			        $path = '../beta/test/';
			        //$name = uniqid() . date('Y-m-dH:i:s') . '.jpeg';
			        $profilename = "profile".$profile_id.'.jpeg';
			        $file = $path . $profilename;
			        $success = file_put_contents($file, $data);
		        }
		      }
        	  
	        $profile = array(
	                      'profileFirstName' => $input->profileFirstName,
	                      'profileMiddleName' => $input->profileMiddleName,
	                      'profileLastName' => $input->profileLastName,
	                      'profileDateOfBirth' => $input->profileDateOfBirth,
	                      'profileGenderId' => $input->gender,
	                      'profileMobilePhone' => $input->profileMobilePhone,
	                      'profileMobileEx' => $input->profileMobileEx,
	                      'profileEmail' => $input->profileEmail,
	                      'profileAddressFirstLine' => $input->profileAddressFirstLine,
	                      'profileAddressSecondLine' => $input->profileAddressSecondLine,
	                      'profileAddressCity' => $input->profileAddressCity,
	                      'profileAddressStateId' => $input->profileAddressState,
	                      'profileAddressZip' => $input->profileAddressZip,
	                      'profileAddressCountryId' => $input->profileAddressCountry,
	                      'profilePicture' => $profilename,
	                      'profileSchoolName' => $input->profileSchoolName,
	                      'profileSchoolLogo' => $input->profileSchoolLogo,
	                      'profileSchoolGrade' => $input->profileSchoolGrade,
	                   );
	       if($profile_id){
	        $update_pro = "update Profile set profileFirstName='".$profile['profileFirstName']."', 
	                                          profileMiddleName='".$profile['profileMiddleName']."',
	                                          profileLastName='".$profile['profileLastName']."', 
	                                          profileDateOfBirth='".$profile['profileDateOfBirth']."', 
	                                          profileGenderId='".$profile['profileGenderId']."',
	                                          profileEmail='".$profile['profileEmail']."',
	                                          profileMobilePhone='".$profile['profileMobilePhone']."',
	                                          profileMobileEx='".$profile['profileMobileEx']."',
	                                          profileAddressFirstLine='".$profile['profileAddressFirstLine']."',
	                                          profileAddressSecondLine='".$profile['profileAddressSecondLine']."',
	                                          profileAddressCity='".$profile['profileAddressCity']."',
	                                          profileAddressStateId='".$profile['profileAddressStateId']."',
	                                          profileAddressZip='".$profile['profileAddressZip']."',
	                                          profileAddressCountryId='".$profile['profileAddressCountryId']."',
	                                          profilePicture='".$profile['profilePicture']."',
	                                          profileSchoolName='".$profile['profileSchoolName']."',
	                                          profileSchoolLogo='".$profile['profileSchoolLogo']."'	,                                          
	                                          profileSchoolGrade='".$profile['profileSchoolGrade']."'	                                          
	                       where profileId = '$profile_id'";
	      }else{ //new profile creation
	        $update_pro = "insert into Profile(`accountId`, `profileFirstName`, `profileMiddleName`, `profileLastName`, `profileDateOfBirth`, `profileGenderId`, `profileMobilePhone`, `profileMobileEx`, `profileEmail`, `profilePicture`, `profileAddressFirstLine`, `profileAddressSecondLine`, `profileAddressCity`, `profileAddressStateId`, `profileAddressZip`, `profileAddressCountryId`, `profileSchoolName`, `profileSchoolLogo`, `profileSchoolGrade`) values
	                       ('$account_id','$input->profileFirstName','$input->profileMiddleName','$input->profileLastName','$input->profileDateOfBirth','$input->gender','$input->profileMobilePhone','$input->profileMobileEx','$input->profileEmail','$input->profilePicture','$input->profileAddressFirstLine','$input->profileAddressSecondLine','$input->profileAddressCity', '$input->profileAddressState','$input->profileAddressZip','$input->profileAddressCountry','$input->profileSchoolName','$input->profileSchoolLogo', '$input->profileSchoolGrade')";
	                       
	      }               
	        //echo $update_acc; //exit;
	        foreach($input->Emergency as $emer)
	        {
	        	 $emergency[] = "(:profileid,'$emer->emergencyContactFirstName','$emer->emergencyContactMiddleName','$emer->emergencyContactLastName',
	        	                  '$emer->emergencyPhoneType','$emer->emergencyContactNumber','$emer->emergencyPhoneExtn','$emer->emergencyContactRelationship')";
	        }   
	        
	        foreach($input->Doctor as $doc)
	        {
	        	 $doctor[] = "(:profileid,'$doc->doctorFirstName','$doc->doctorMiddleName','$doc->doctorLastName',
	        	               '$doc->doctorPhoneType','$doc->doctorPhoneNumber','$doc->doctorPhoneExtn','$doc->doctorAddressType',
	        	               '$doc->doctorAddressFirstline','$doc->doctorAddressSecondline','$doc->doctorCity','$doc->doctorState',
	        	               '$doc->doctorZip','$doc->doctorCountry')";
	        }
	        
	        foreach($input->Insurance as $ins)
	        {
	        	 $insurance[] = "(:profileid,'$ins->providerName','$ins->planId','$ins->groupId','$ins->payerId','$ins->expMonth','$ins->expYear','$ins->expDay','$ins->scanCopyFront','$ins->scanCopyBack')";
	        }
	        $emer_arr = implode(",",$emergency);    
	        $doc_arr = implode(",",$doctor);  
	        $ins_arr = implode(",",$insurance);   
	        $emer_del = "delete from EmergencyContacts where profileId=:profileid";
	        $doc_del = "delete from DoctorDetails where profileId=:profileid";
	        $ins_del = "delete from Insurance where profileId=:profileid";
	        $insert_emergency = "insert into EmergencyContacts (profileId,emergencyContactFirstName,emergencyContactMiddleName,emergencyContactLastName,emergencyPhoneType,emergencyContactNumber,emergencyPhoneExtn,emergencyContactRelationship) values ".$emer_arr."";
	        $insert_doctor = "insert into DoctorDetails (profileId,doctorFirstName,doctorMiddleName,doctorLastName,doctorPhoneType,doctorPhoneNumber,doctorPhoneExtn,doctorAddressType,doctorAddressFirstline,doctorAddressSecondline,doctorCity,doctorState,doctorZip,doctorCountry) values ".$doc_arr."";
	        $insert_insurance = "insert into Insurance (profileId,providerName,planId,groupId,payerId,expMonth,expYear,expDay,scanCopyFront,scanCopyBack) values ".$ins_arr."";
	        /*echo $insert_phone;
	        echo $insert_email;
	        echo $insert_address; exit;*/
	        try {
	        	
	        	if($profile_id){
	        		$pro1 = $dbCon->prepare($update_pro);
	            $pro1->execute();	        		
	        	}else{
	        		$pro1 = $dbCon->prepare($update_pro);
	            $pro1->execute();
	            $profile_id = $dbCon->lastInsertId();
	        	}
              
	           $del1 = $dbCon->prepare($emer_del);
	           $del1->bindParam("profileid", $profile_id);
	           $del1->execute();
	           $del2 = $dbCon->prepare($doc_del);
	           $del2->bindParam("profileid", $profile_id);
	           $del2->execute();
	           $del3 = $dbCon->prepare($ins_del);
	           $del3->bindParam("profileid", $profile_id);
	           $del3->execute();
	           $insert1 = $dbCon->prepare($insert_emergency);
	           $insert1->bindParam("profileid", $profile_id);
	           $insert1->execute();
	           $insert2 = $dbCon->prepare($insert_doctor);
	           $insert2->bindParam("profileid", $profile_id);
	           $insert2->execute();
	           $insert3 = $dbCon->prepare($insert_insurance);
	           $insert3->bindParam("profileid", $profile_id);
	           $insert3->execute();
	           
	           echo json_encode(array(
	            "status" => 'true',
	            "message" => "Personal info updated successfully"
	            ));
           }catch(PDOException $e) {
           	  echo json_encode(array(
		            "status" => false,
		            "message" => $e->getMessage()
	           ));              
           }
        }
      else
        {
        	  echo json_encode(array(
	            "status" => false,
	            "message" => "Account Id is missing."
	        ));
        }        
	
});

$app->post('/editAllergy', function(){
	global $app;
        $request = $app->request();
        $body = $request->getBody();
        $input = json_decode($body);
        //var_dump($input); exit;
        $profile_id = $input->profileId;
        $dbCon = getConnection();
        if($profile_id){
        //	var_dump($input->allergies); exit;
        $del_aller = "delete from Allergy where profileId = '".$profile_id."'";
        $allergy_del = $dbCon->prepare($del_aller);
	     $sucs1 = $allergy_del->execute();
        foreach($input->allergies as $key => $row){
        	 echo $row->allergyId;
        }exit;
        foreach($input->allergies as $key => $row){
                      
            //get old allergy id and delete it
            $old_allergy_id = $row->allergyId;
            
            
     
	         $del_mild = "delete from ProfileSymtomsMild where allergyId = '".$old_allergy_id."'";
           	         
	         $del_severe = "delete from ProfileSymtomsSevere where allergyId = '".$old_allergy_id."'";           
	        
            $allergyNameId = $row->allergyNameId;
            $allergyTypeId = $row->allergyTypeId;
            
            try{            	
            	
	            $mild_del = $dbCon->prepare($del_mild);
	            $mild_del->execute();
	            $severe_del = $dbCon->prepare($del_severe);
	            $severe_del->execute();
	            
            	$sql_a = "insert into Allergy(profileId,AllergyNameId,AllergyTypeId) values ('$profile_id','$allergyNameId','$allergyTypeId')";
            	$allergy = $dbCon->prepare($sql_a);
	            $allergy->execute();
	            $allergy_id = $dbCon->lastInsertId();
	            
	            //insert into mild table
	            if(!empty($row->mild)){
	            	foreach($row->mild as $m){
	            		$sql_m = "insert into ProfileSymtomsMild(allergyId,SymtomMildId) values ('$allergy_id','$m->symtomMildId')";
	            		$mild = $dbCon->prepare($sql_m);
	                  $mild->execute();
	            	}
	            }
	            
	            //insert into severe table
	            if(!empty($row->severe)){
	            	foreach($row->severe as $s){
	            		$sql_s = "insert into ProfileSymtomsSevere(allergyId,SymtomSevereId) values ('$allergy_id','$s->symtomSevereId')";
	            		$severe = $dbCon->prepare($sql_s);
	                  $severe->execute();
	            	}
	            }
	            
            }catch(PDOException $e){
            	echo json_encode(array(
		            "status" => false,
		            "message" => $e->getMessage()
	           ));   
            }
        }
      if($profile_id){
      	   $sql_d = "delete from AllergyIncidentSymptoms where profileId='".$profile_id."'";
      	   $inci_del = $dbCon->prepare($sql_d);
	         $inci_del->execute();
      }
  
      foreach($input->incidents as $key => $row){
      	
         $sql = "insert into AllergyIncidentSymptoms(profileId,allergyTypeId,allergyIncidentDesc,allergyIncidentDate) values 
                 ('$profile_id','$row->allergyTypeId','$row->allergyIncidentDesc','$row->allergyIncidentDate')";
         $incident = $dbCon->prepare($sql);
	      $incident->execute();
      }
    echo json_encode(array(
		            "status" => true,
		            "message" => 'Allergy details updated successfully'
	            ));
	 }else{
	 	echo json_encode(array(
		            "status" => false,
		            "message" => 'Profile Id missing'
	            ));
	 }  
        
        
});

$app->post('/editSharingInfo', function(){
	global $app;
        $request = $app->request();
        $body = $request->getBody();
        $input = json_decode($body);
        $dbCon = getConnection();
        $success = 0;
        //var_dump($input); //exit;
        $profile_id = $input->informationsharing[0]->profileId; 
       if($profile_id){
        $dbCon = getConnection();
        foreach($input->informationsharing as $row)
        {
        	 if($row->infoSharingId)
        	 {
        	    $info_sql = "update InformationSharing set personalInfo='".$row->personalInfo."', schoolInfo='".$row->schoolInfo."', 
        	              insuranceInfo='".$row->insuranceInfo."', EmergencyContactInfo='".$row->EmergencyContactInfo."' where infoSharingId='".$row->infoSharingId."'";
        	 }
          else
          {
          	 $info_sql = "insert into (`profileId`, `userTypeId`, `personalInfo`, `EmergencyContactInfo`, `schoolInfo`, `insuranceInfo`)
          	              values ('$profile_id','$row->userTypeId','$row->personalInfo','$row->EmergencyContactInfo','$row->schoolInfo','$row->insuranceInfo')";
          }
          try{         
        	 $inci = $dbCon->prepare($info_sql);
	       $inci->execute();
	       $success = 1;
          	
         }catch(PDOException $e){
         	echo json_encode(array(
		            "status" => false,
		            "message" => $e->getMessage()
	            ));
         }
        	              
        }
        if($success){
        	echo json_encode(array(
		            "status" => false,
		            "message" => 'Information sharing updated successfully'
	            ));	            
        }else{
        	  echo json_encode(array(
		            "status" => false,
		            "message" => 'Information sharing updation failed'
	            ));
	            
        }
      }else{
      	echo json_encode(array(
		            "status" => false,
		            "message" => 'Profile Id missing'
	            ));
      }
});

$app->post('/photo', function(){
	global $app;
        $request = $app->request();
        $body = $request->getBody();
        $input = json_decode($body);
        $dbCon = getConnection();
        
        $data = $input->image;
        //$data = str_replace('data:image/jpg;base64,', '', $data);
        //$data = str_replace(' ', '+', $data);
        $data = explode(",",$data);
        $data = base64_decode($data[1]);
        $path = '../beta/test/';
        //$name = uniqid() . date('Y-m-dH:i:s') . '.jpeg';
        $name = "profile";
        $file = $path . $name;
        $success = file_put_contents($file, $data);
        echo $name;
        
});
$app->run();

?>